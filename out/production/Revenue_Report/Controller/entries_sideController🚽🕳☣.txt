//         FXMLLoader loadsgre = new FXMLLoader();
//        loadsgre.setLocation(getClass().getResource( "/Views/fxml/entries_side.fxml"));
//        loadsgre.setController(this);
//         try {
//         loadsgre.load();            
//     } catch (IOException exception) {
//         throw new RuntimeException(exception);
//     }


        stage.setOnCloseRequest(new EventHandler<WindowEvent>() {
          public void handle(WindowEvent we) {
              System.out.println("Stage is closing");
          }
      });


final char seperatorChar = '/';
final Pattern p = Pattern.compile("[0-9" + seperatorChar + "]*");
textField.setTextFormatter(new TextFormatter<>(c -> {
    if (!c.isContentChange()) {
        return c; // no need for modification, if only the selection changes
    }
    String newText = c.getControlNewText();
    if (newText.isEmpty()) {
        return c;
    }
    if (!p.matcher(newText).matches()) {
        return null; // invalid change
    }

    // invert everything before the range
    int suffixCount = c.getControlText().length() - c.getRangeEnd();
    int digits = suffixCount - suffixCount / 4;
    StringBuilder sb = new StringBuilder();

    // insert seperator just before caret, if necessary
    if (digits % 3 == 0 && digits > 0 && suffixCount % 4 != 0) {
        sb.append(seperatorChar);
    }

    // add the rest of the digits in reversed order
    for (int i = c.getRangeStart() + c.getText().length() - 1; i >= 0; i--) {
        char letter = newText.charAt(i);
        if (Character.isDigit(letter)) {
            sb.append(letter);
            digits++;
            if (digits % 3 == 0) {
                sb.append(seperatorChar);
            }
        }
    }

    // remove seperator char, if added as last char
    if (digits % 3 == 0) {
        sb.deleteCharAt(sb.length() - 1);
    }
    sb.reverse();
    int length = sb.length();

    // replace with modified text
    c.setRange(0, c.getRangeEnd());
    c.setText(sb.toString());
    c.setCaretPosition(length);
    c.setAnchor(length);

    return c;
}))

stage.initStyle(StageStyle.UTILITY);




//     private final ObjectProperty<Node> node = new SimpleObjectProperty<>();
//
//    public ObjectProperty<Node> nodeProperty() {
//        return node ;
//    }




REVENUE_REPORT

//        appController appcontroller = (appController)firstLoader.getController();
//        Parent root = null; 
//        appController app = new appController();
//        stage.setScene(new Scene(app));



APP_CONTROLLER

//          FXMLLoader firstLoader = new FXMLLoader(getClass().getResource("/Views/fxml/app.fxml"));
//          firstLoader.setRoot(this);
//        firstLoader.setController(this);
//         
//          try {
//         firstLoader.load();            
//     } catch (IOException exception) {
//         throw new RuntimeException(exception);
//         }

//    public appController(Parent root) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
    
//    public ObjectProperty<Node> displayedViewProperty() {
//        return sborder_pane.centerProperty;
//    }

//    public static void moveToCenter(URL ui, BorderPane borderpane){
//try {
//        Parent root = FXMLLoader.load(ui);
//        borderpane.setCenter(root);
//    } catch (IOException ex) {
//        Logger.getLogger(ChangeScenes.class.getName()).log(Level.SEVERE, null, ex);
//    }
//}   
          //        entries_sideController entries = loadsgre.<entries_sideController>getController();
//        entries.nodeProperty().set(centerPane);








org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8




<!--						<datasetParameter name = "DAY1">-->
<!--								<datasetParameterExpression>-->
<!--									[CDATA[$P{DAY1}]]-->
<!--								</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "DAY2">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{DAY2}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "DAY3">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{DAY3}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "DAY4">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{DAY4}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "DAY5">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{DAY5}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "DAY6">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{DAY6}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "DAY7">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{DAY7}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day1">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day1}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day2">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day2}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day3">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day3}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day4">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day4}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day5">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day5}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day6">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day6}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->
<!--						<datasetParameter name = "day7">-->
<!--							<datasetParameterExpression>-->
<!--								[CDATA[$P{day7}]]-->
<!--							</datasetParameterExpression>-->
<!--						</datasetParameter>-->







<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.TableView?>


<TableView fx:id="quarterMastItemsTable" maxHeight="-Infinity" maxWidth="-Infinity" prefHeight="451.0" prefWidth="651.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1">
   <columns>
      <TableColumn fx:id="revenueItems" maxWidth="865.0000076293945" prefWidth="848.0000076293945" text="REVENUE ITEMS">
         <columns>
            <TableColumn fx:id="revenueItem" prefWidth="126.0" text="REVENUE ITEM " />
            <TableColumn fx:id="year" prefWidth="75.0" text="Year: #">
               <columns>
                  <TableColumn fx:id="quarter" prefWidth="618.0" text="QUARTER #">
                     <columns>
                        <TableColumn fx:id="month1" prefWidth="165.0" text="MONTH" />
                        <TableColumn fx:id="month2" prefWidth="165.0" text="MONTH" />
                        <TableColumn fx:id="month3" prefWidth="165.0" text="MONTH" />
                        <TableColumn fx:id="totalAmount" prefWidth="100.0" text="TOTAL AMOUNT" />
                     </columns>
                  </TableColumn>
               </columns>
            </TableColumn>
         </columns>
      </TableColumn>
   </columns>
   <columnResizePolicy>
      <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
   </columnResizePolicy>
</TableView>



Tadaaaaaa: myMONdevices.7



DELETE FROM `collection_payment_entries` WHERE `pay_revCenter` = 'Environmental' AND `GCR` = '352654' AND `payment_type` = 'Cheque'
















